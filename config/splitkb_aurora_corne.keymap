/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tap_or_hold: tap_or_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_OR_HOLD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tap_or_mod: tap_or_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_OR_MOD";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB                    &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y      &kp U  &kp I          &kp O    &kp P     &none
&tap_or_hold LCTRL ESCAPE  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H      &kp J  &kp K          &kp L    &kp SEMI  &kp SQT
&kp LSHFT                  &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N      &kp M  &kp COMMA      &kp DOT  &kp FSLH  &tap_or_mod 1 BACKSPACE
                                         &kp LEFT_WIN  &mo 2  &kp SPACE    &kp SPACE  &mo 2  &kp RIGHT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp F1  &kp F2    &kp F3         &kp F4       &kp F5           &kp F6     &kp F7    &kp F8         &kp F9            &kp F10       &none
&trans     &trans  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END          &kp LEFT   &kp DOWN  &kp UP         &kp RIGHT         &kp COLON     &kp DOUBLE_QUOTES
&kp LSHFT  &trans  &trans    &trans         &trans       &trans           &trans     &trans    &kp LESS_THAN  &kp GREATER_THAN  &kp QUESTION  &none
                             &trans         &trans       &kp BACKSPACE    &kp ENTER  &trans    &kp DELETE
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4   &kp N5       &kp NUMBER_6  &kp NUMBER_7  &kp N8         &kp N9            &kp N0             &none
&trans          &trans        &kp MINUS     &kp EQUAL     &kp BACKSLASH  &kp GRAVE    &kp MINUS     &kp EQUAL     &kp BACKSLASH  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp GRAVE
&kp LEFT_SHIFT  &trans        &trans        &trans        &trans         &trans       &trans        &trans        &trans         &trans            &trans             &kp BACKSPACE
                                            &trans        &trans         &kp SPACE    &kp RET       &trans        &kp DEL
            >;
        };
    };
};
